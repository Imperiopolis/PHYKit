/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import <Foundation/NSObject.h>
UITextInput.hUITextInputAdditions.h
@class NSArray, NSDictionary, NSHashTable, NSLayoutManager, UITextChecker, UITextInputTraits, UITextPosition, UITextRange, UIView, UIView<UITextInput>, _UIDictationAttachment, _UITextInputControllerTokenizer, _UITextServiceSession, _UITextUndoManager, _UITextUndoOperationTyping;

@interface UITextInputController : NSObject <UITextInput, UITextInputAdditions>
{
    id <UITextInputDelegate> _inputDelegate;
    struct _NSRange _selectedRange;
    _UITextInputControllerTokenizer *_tokenizer;
    NSLayoutManager *_layoutManager;
    NSHashTable *_observedScrollViews;
    _UITextServiceSession *_definitionSession;
    _UITextServiceSession *_learnSession;
    UITextInputTraits *_textInputTraits;
    struct _NSRange _markedTextRange;
    struct _NSRange _markedTextSelection;
    struct {
        unsigned int delegateRespondsToTextInputShouldBeginEditing:1;
        unsigned int delegateRespondsToTextInputShouldChangeCharactersInRangeReplacementText:1;
        unsigned int delegateRespondsToTextInputDidChange:1;
        unsigned int delegateRespondsToTextInputDidChangeSelection:1;
        unsigned int delegateRespondsToTextInputWillChangeSelectionFromCharacterRangeToCharacterRange:1;
        unsigned int delegateRespondsToTextInputEditorDidChangeSelection:1;
        unsigned int delegateRespondsToTextInputPrepareAttributedTextForInsertion:1;
        unsigned int textOrSelectionChangeOriginatesWithKeyboard:1;
        unsigned int showingTextStyleOptions:1;
        unsigned int undoRedoInProgress:1;
        unsigned int textOrSelectionChangeOriginatesWithMarkedText:1;
    } _tiFlags;
    NSArray *_extraItemsBeforeTextStyleOptions;
    UIView<UITextInput> *_firstTextView;
    _UITextUndoManager *_undoManager;
    _UITextUndoOperationTyping *_undoOperationForCoalescing;
    UITextChecker *_textChecker;
    _UIDictationAttachment *_dictationPlaceholder;
    BOOL _allowsEditingTextAttributes;
    BOOL _continuousSpellCheckingEnabled;
    NSDictionary *_emptyStringAttributes;
    NSDictionary *_typingAttributes;
    id <UITextInputControllerDelegate> _delegate;
    struct _NSRange _previousSelectedRange;
}

@property(nonatomic) struct _NSRange previousSelectedRange; // @synthesize previousSelectedRange=_previousSelectedRange;
@property(nonatomic) BOOL continuousSpellCheckingEnabled; // @synthesize continuousSpellCheckingEnabled=_continuousSpellCheckingEnabled;
@property(nonatomic) id <UITextInputControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(copy, nonatomic) NSDictionary *typingAttributes; // @synthesize typingAttributes=_typingAttributes;
@property(nonatomic) BOOL allowsEditingTextAttributes; // @synthesize allowsEditingTextAttributes=_allowsEditingTextAttributes;
@property(copy, nonatomic, getter=_emptyStringAttributes, setter=_setEmptyStringAttributes:) NSDictionary *emptyStringAttributes; // @synthesize emptyStringAttributes=_emptyStringAttributes;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)_resetShowingTextStyle:(id)arg1;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)_toggleFontTrait:(int)arg1;
- (void)_addShortcut:(id)arg1;
- (void)_clearSelectionUI;
- (BOOL)_isDisplayingReferenceLibraryViewController;
- (BOOL)_isDisplayingShortcutViewController;
- (void)_removeShortcutController;
- (void)_define:(id)arg1;
- (void)_removeDefinitionController;
- (void)_promptForReplace:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)_copySelectionToClipboard;
- (void)removeTextStylingFromString:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (BOOL)_isSecureTextEntry;
- (void)replace:(id)arg1;
- (void)selectAll;
- (id)_selectedAttributedText;
- (id)_selectedText;
- (BOOL)_shouldHandleResponderAction:(SEL)arg1;
- (BOOL)_canHandleResponderAction:(SEL)arg1;
- (id)metadataDictionariesForDictationResults;
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(BOOL)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (void)_insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 replacingRange:(struct _NSRange)arg3 resultLength:(unsigned int *)arg4;
- (void)clearText;
- (void)changeWillBeUndone:(id)arg1;
- (void)stopCoalescing;
- (BOOL)isCoalescing;
- (BOOL)_undoRedoInProgress;
- (void)_setUndoRedoInProgress:(BOOL)arg1;
- (void)undoDidChangeText;
- (void)undoWillChangeText;
- (void)registerUndoOperationForType:(int)arg1 actionName:(id)arg2 affectedRange:(struct _NSRange)arg3 replacementText:(id)arg4;
- (void)coalesceInTextView:(id)arg1 affectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)_undoManagerWillUndo:(id)arg1;
- (id)undoManager;
- (id)textStylingAtPosition:(id)arg1 inDirection:(int)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)_caretRectForOffset:(int)arg1;
@property(readonly, nonatomic, getter=_caretRect) struct CGRect caretRect;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2;
- (int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (void)_invalidateEmptyStringAttributes;
- (void)_invalidateTypingAttributes;
- (void)_addToTypingAttributes:(id)arg1 value:(id)arg2;
- (id)_attributesForReplacementInRange:(struct _NSRange)arg1;
- (id)_newAttributedStringForInsertionOfText:(id)arg1 inRange:(struct _NSRange)arg2;
- (id)_fixupOriginalFontAttributeForAttributes:(id)arg1;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2;
- (int)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (int)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3;
- (id)positionFromPosition:(id)arg1 offset:(int)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)_forceUnmarkTextDueToEditing;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (void)_ensureSelectionVisible;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (id)_parentScrollView;
- (unsigned int)_validCaretPositionFromCharacterIndex:(unsigned int)arg1 downstream:(BOOL)arg2;
- (unsigned int)_characterPositionForPoint:(struct CGPoint)arg1;
- (id)_rectsForRange:(struct _NSRange)arg1;
- (id)selectionView;
- (void)updateSelection;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (void)checkSpellingForSelectionChangeIfNecessary;
- (void)removeSpellingMarkersForCurrentWord;
- (void)removeSpellingMarkersFromWordInRange:(id)arg1;
- (id)textRangeForNSRange:(struct _NSRange)arg1;
- (struct _NSRange)nsRangeForTextRange:(id)arg1;
- (void)checkSpellingForWordInRange:(id)arg1;
- (void)preheatTextChecker;
- (id)textChecker;
- (void)deleteBackward;
- (void)didEndEditing;
- (struct _NSRange)_rangeForBackwardsDelete;
- (void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2;
- (BOOL)_hasDictationPlaceholder;
- (id)_filteredAttributedTextInRange:(struct _NSRange)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (void)_insertAttributedText:(id)arg1 fromKeyboard:(BOOL)arg2;
- (void)addTextAlternativesDisplayStyleToRange:(struct _NSRange)arg1;
- (void)insertText:(id)arg1;
- (void)removeAlternativesForCurrentWord;
- (BOOL)hasText;
- (BOOL)_mightHaveSelection;
@property(readonly, nonatomic, getter=isEditing) BOOL editing;
@property(readonly, nonatomic, getter=isEditable) BOOL editable;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (void)_insertText:(id)arg1 fromKeyboard:(BOOL)arg2;
- (int)atomStyle;
- (BOOL)drawsAsAtom;
@property(nonatomic) struct _NSRange selectedRange;
- (void)_coordinateSelectionChange:(id)arg1;
- (void)_ensureSelectionValid;
- (void)_selectionDidScroll:(id)arg1;
- (id)interactionAssistant;
- (id)_firstTextView;
- (void)_selectionGeometryChanged;
- (void)_textStorageDidProcessEditing:(id)arg1;
- (void)_updateFirstTextView;
- (BOOL)_shouldConsiderTextViewForGeometry:(id)arg1;
- (void)_textContainerDidChangeView:(id)arg1;
- (void)_teardownTextContainerView:(id)arg1;
- (void)_setupTextContainerView:(id)arg1;
- (void)_setGestureRecognizers;
- (id)_textStorage;
- (id)_layoutManager;
- (BOOL)_delegateShouldChangeTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;
- (void)_sendDelegateChangeNotificationsForText:(BOOL)arg1 selection:(BOOL)arg2;
- (void)_sendDelegateWillChangeNotificationsForText:(BOOL)arg1 selection:(BOOL)arg2;
- (void)_cancelDictationIfNecessaryForChangeInRange:(struct _NSRange)arg1;
- (void)dealloc;
- (void)_commonInitWithLayoutManager:(id)arg1;
- (id)initWithLayoutManager:(id)arg1;

// Remaining properties
@property(nonatomic) int autocapitalizationType;
@property(nonatomic) int autocorrectionType;
@property(nonatomic) BOOL enablesReturnKeyAutomatically;
@property(nonatomic) int keyboardAppearance;
@property(nonatomic) int keyboardType;
@property(nonatomic) int returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(nonatomic) int selectionAffinity;
@property(nonatomic) int spellCheckingType;
@property(readonly, nonatomic) UIView *textInputView;

@end

